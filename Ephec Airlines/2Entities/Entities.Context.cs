//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AirlinesEntities : DbContext
    {
        public AirlinesEntities()
            : base("name=AirlinesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Accompagnateur> Accompagnateur { get; set; }
        public virtual DbSet<AllerRetour> AllerRetour { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Planning> Planning { get; set; }
        public virtual DbSet<Reservation> Reservation { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tranche> Tranche { get; set; }
        public virtual DbSet<Ville> Ville { get; set; }
        public virtual DbSet<Vol> Vol { get; set; }
    
        public virtual int ACC_DeleteAccompagnateur(Nullable<int> idAccompagnateur)
        {
            var idAccompagnateurParameter = idAccompagnateur.HasValue ?
                new ObjectParameter("IdAccompagnateur", idAccompagnateur) :
                new ObjectParameter("IdAccompagnateur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACC_DeleteAccompagnateur", idAccompagnateurParameter);
        }
    
        public virtual int ACC_DeleteByResId(Nullable<int> idReservation)
        {
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACC_DeleteByResId", idReservationParameter);
        }
    
        public virtual ObjectResult<ACC_GetAccompagnateurChiffreParTete_Result> ACC_GetAccompagnateurChiffreParTete(Nullable<int> idReservation)
        {
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ACC_GetAccompagnateurChiffreParTete_Result>("ACC_GetAccompagnateurChiffreParTete", idReservationParameter);
        }
    
        public virtual ObjectResult<ACC_GetAccompagnateursWithPrice_Result> ACC_GetAccompagnateursWithPrice(Nullable<int> idReservation)
        {
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ACC_GetAccompagnateursWithPrice_Result>("ACC_GetAccompagnateursWithPrice", idReservationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ACC_GetAccResId(Nullable<int> idAccompagnateur)
        {
            var idAccompagnateurParameter = idAccompagnateur.HasValue ?
                new ObjectParameter("IdAccompagnateur", idAccompagnateur) :
                new ObjectParameter("IdAccompagnateur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ACC_GetAccResId", idAccompagnateurParameter);
        }
    
        public virtual int ACC_Insert(string nom, string prenom, Nullable<System.DateTime> dateNaissance, Nullable<int> idReservation)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("Nom", nom) :
                new ObjectParameter("Nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("Prenom", prenom) :
                new ObjectParameter("Prenom", typeof(string));
    
            var dateNaissanceParameter = dateNaissance.HasValue ?
                new ObjectParameter("DateNaissance", dateNaissance) :
                new ObjectParameter("DateNaissance", typeof(System.DateTime));
    
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACC_Insert", nomParameter, prenomParameter, dateNaissanceParameter, idReservationParameter);
        }
    
        public virtual int ACC_InsertNullPrenom(string nom, Nullable<System.DateTime> dateNaissance, Nullable<int> idReservation)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("Nom", nom) :
                new ObjectParameter("Nom", typeof(string));
    
            var dateNaissanceParameter = dateNaissance.HasValue ?
                new ObjectParameter("DateNaissance", dateNaissance) :
                new ObjectParameter("DateNaissance", typeof(System.DateTime));
    
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACC_InsertNullPrenom", nomParameter, dateNaissanceParameter, idReservationParameter);
        }
    
        public virtual int AR_DeleteARById(Nullable<int> idAr)
        {
            var idArParameter = idAr.HasValue ?
                new ObjectParameter("IdAr", idAr) :
                new ObjectParameter("IdAr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AR_DeleteARById", idArParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AR_GetArId(Nullable<int> idReservation)
        {
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AR_GetArId", idReservationParameter);
        }
    
        public virtual int AR_InsertAR(Nullable<int> idReservationAller, Nullable<int> idReservationRetour)
        {
            var idReservationAllerParameter = idReservationAller.HasValue ?
                new ObjectParameter("IdReservationAller", idReservationAller) :
                new ObjectParameter("IdReservationAller", typeof(int));
    
            var idReservationRetourParameter = idReservationRetour.HasValue ?
                new ObjectParameter("IdReservationRetour", idReservationRetour) :
                new ObjectParameter("IdReservationRetour", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AR_InsertAR", idReservationAllerParameter, idReservationRetourParameter);
        }
    
        public virtual ObjectResult<CLI_FetchTousClients_Result> CLI_FetchTousClients()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CLI_FetchTousClients_Result>("CLI_FetchTousClients");
        }
    
        public virtual ObjectResult<CLI_GetClientMoneyInfo_Result> CLI_GetClientMoneyInfo(Nullable<int> idClient, Nullable<int> idReservation)
        {
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("IdClient", idClient) :
                new ObjectParameter("IdClient", typeof(int));
    
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CLI_GetClientMoneyInfo_Result>("CLI_GetClientMoneyInfo", idClientParameter, idReservationParameter);
        }
    
        public virtual ObjectResult<CLI_SelectAll_Result> CLI_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CLI_SelectAll_Result>("CLI_SelectAll");
        }
    
        public virtual ObjectResult<Client_Add_Result> Client_Add()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Client_Add_Result>("Client_Add");
        }
    
        public virtual ObjectResult<PLA_GetDateByVolId_Result> PLA_GetDateByVolId(Nullable<int> idVol)
        {
            var idVolParameter = idVol.HasValue ?
                new ObjectParameter("IdVol", idVol) :
                new ObjectParameter("IdVol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PLA_GetDateByVolId_Result>("PLA_GetDateByVolId", idVolParameter);
        }
    
        public virtual ObjectResult<PLA_GetDateByVolIdDateCritere_Result> PLA_GetDateByVolIdDateCritere(Nullable<int> idVol, Nullable<System.DateTime> date)
        {
            var idVolParameter = idVol.HasValue ?
                new ObjectParameter("IdVol", idVol) :
                new ObjectParameter("IdVol", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PLA_GetDateByVolIdDateCritere_Result>("PLA_GetDateByVolIdDateCritere", idVolParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> PLA_GetDatesMemeVol(Nullable<int> idVol, Nullable<int> idPlanning)
        {
            var idVolParameter = idVol.HasValue ?
                new ObjectParameter("IdVol", idVol) :
                new ObjectParameter("IdVol", typeof(int));
    
            var idPlanningParameter = idPlanning.HasValue ?
                new ObjectParameter("IdPlanning", idPlanning) :
                new ObjectParameter("IdPlanning", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("PLA_GetDatesMemeVol", idVolParameter, idPlanningParameter);
        }
    
        public virtual ObjectResult<PLA_GetDatesMemeVolWithPlaId_Result> PLA_GetDatesMemeVolWithPlaId(Nullable<int> idVol, Nullable<int> idPlanning)
        {
            var idVolParameter = idVol.HasValue ?
                new ObjectParameter("IdVol", idVol) :
                new ObjectParameter("IdVol", typeof(int));
    
            var idPlanningParameter = idPlanning.HasValue ?
                new ObjectParameter("IdPlanning", idPlanning) :
                new ObjectParameter("IdPlanning", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PLA_GetDatesMemeVolWithPlaId_Result>("PLA_GetDatesMemeVolWithPlaId", idVolParameter, idPlanningParameter);
        }
    
        public virtual int RES_DeleteResId(Nullable<int> idReservation)
        {
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RES_DeleteResId", idReservationParameter);
        }
    
        public virtual ObjectResult<RES_GetAller_Result> RES_GetAller(Nullable<System.DateTime> date, Nullable<int> idClient, Nullable<int> idVilleDepart, Nullable<int> idVilleRetour)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("IdClient", idClient) :
                new ObjectParameter("IdClient", typeof(int));
    
            var idVilleDepartParameter = idVilleDepart.HasValue ?
                new ObjectParameter("IdVilleDepart", idVilleDepart) :
                new ObjectParameter("IdVilleDepart", typeof(int));
    
            var idVilleRetourParameter = idVilleRetour.HasValue ?
                new ObjectParameter("IdVilleRetour", idVilleRetour) :
                new ObjectParameter("IdVilleRetour", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RES_GetAller_Result>("RES_GetAller", dateParameter, idClientParameter, idVilleDepartParameter, idVilleRetourParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> RES_GetPrixTotal(Nullable<int> idReservation)
        {
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("RES_GetPrixTotal", idReservationParameter);
        }
    
        public virtual ObjectResult<RES_GetResByClientId_Result> RES_GetResByClientId(Nullable<int> idClient)
        {
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("IdClient", idClient) :
                new ObjectParameter("IdClient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RES_GetResByClientId_Result>("RES_GetResByClientId", idClientParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RES_GetResId(Nullable<int> idClient, Nullable<int> idPlanning)
        {
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("IdClient", idClient) :
                new ObjectParameter("IdClient", typeof(int));
    
            var idPlanningParameter = idPlanning.HasValue ?
                new ObjectParameter("IdPlanning", idPlanning) :
                new ObjectParameter("IdPlanning", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RES_GetResId", idClientParameter, idPlanningParameter);
        }
    
        public virtual int RES_Insert(Nullable<int> idClient, Nullable<int> idPlanning)
        {
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("IdClient", idClient) :
                new ObjectParameter("IdClient", typeof(int));
    
            var idPlanningParameter = idPlanning.HasValue ?
                new ObjectParameter("IdPlanning", idPlanning) :
                new ObjectParameter("IdPlanning", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RES_Insert", idClientParameter, idPlanningParameter);
        }
    
        public virtual int RES_UpdateReservationResId(Nullable<int> idReservation)
        {
            var idReservationParameter = idReservation.HasValue ?
                new ObjectParameter("IdReservation", idReservation) :
                new ObjectParameter("IdReservation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RES_UpdateReservationResId", idReservationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VOL_PLA_GetNbPlacesRestantesNEW(Nullable<int> idVol, Nullable<int> idPlanning)
        {
            var idVolParameter = idVol.HasValue ?
                new ObjectParameter("IdVol", idVol) :
                new ObjectParameter("IdVol", typeof(int));
    
            var idPlanningParameter = idPlanning.HasValue ?
                new ObjectParameter("IdPlanning", idPlanning) :
                new ObjectParameter("IdPlanning", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VOL_PLA_GetNbPlacesRestantesNEW", idVolParameter, idPlanningParameter);
        }
    
        public virtual ObjectResult<VOL_SelectAllListChoix_Result> VOL_SelectAllListChoix()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VOL_SelectAllListChoix_Result>("VOL_SelectAllListChoix");
        }
    
        public virtual ObjectResult<VOL_SelectAllListChoixRetour_Result> VOL_SelectAllListChoixRetour(Nullable<int> idVilleDepart, Nullable<int> idVilleRetour)
        {
            var idVilleDepartParameter = idVilleDepart.HasValue ?
                new ObjectParameter("IdVilleDepart", idVilleDepart) :
                new ObjectParameter("IdVilleDepart", typeof(int));
    
            var idVilleRetourParameter = idVilleRetour.HasValue ?
                new ObjectParameter("IdVilleRetour", idVilleRetour) :
                new ObjectParameter("IdVilleRetour", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VOL_SelectAllListChoixRetour_Result>("VOL_SelectAllListChoixRetour", idVilleDepartParameter, idVilleRetourParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    }
}
